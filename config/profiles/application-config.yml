spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #    driver-class-name: org.h2.Driver
      #    type: com.alibaba.druid.pool.DruidDataSource
      #    url: jdbc:h2:file:./bin/h2/datart.demo;MODE=MySQL;DATABASE_TO_LOWER=TRUE;IGNORECASE=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE;IFEXISTS=TRUE
      #    username:
      #    password:
      # 主库数据源
      master:
        url: jdbc:mysql://${datasource.ip:null}:${datasource.port:3306}/${datasource.database:datart}?&allowMultiQueries=true&characterEncoding=utf-8&&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
        username: ${datasource.username:root}
        password: ${datasource.password:123456}
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: true
        url: jdbc:mysql://${datasource.ip:null}:${datasource.port:3306}/${datasource.importdatabase:ry_data}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        #        url: jdbc:mysql://58.22.61.222:57812/ry_data?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: ${datasource.username:root}
        password: ${datasource.password:123456}
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: ruoyi
        login-password: 123456
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

# security:
#   oauth2:
#     client:
#       registration:
#         cas:
#           provider: cas
#           client-id: "xxxxx"
#           client-name: "Sign in with CAS"
#           client-secret: "xxx"
#           authorization-grant-type: authorization_code
#           client-authentication-method: post
#           redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#           scope: userinfo
#       provider:
#         cas:
#           authorization-uri: https://cas.xxx.com/cas/oauth2.0/authorize
#           token-uri: https://cas.xxx.com/cas/oauth2.0/accessToken
#           user-info-uri: https://cas.xxx.com/cas/oauth2.0/profile
#           user-name-attribute: id
#           userMapping:
#             email: "attributes.email"
#             name: "attributes.name"
#             avatar: "attributes.avatar"

# ldap config

# ldap:
#   urls: ldap://{IP}:{PORT}
#   base: xxx
#   username: {username}
#   password: {password}
#   attribute-mapping:
#     username: cn # 自定义登录用户名对应属性名

# mail config

# mail:
#   host: { 邮箱服务地址 }
#   port: { 端口号 }
#   username: { 邮箱地址 }
#   fromAddress:
#   password: { 邮箱服务密码 }
#   senderName: { 发送者昵称 }
#
#   properties:
#     smtp:
#       starttls:
#         enable: true
#         required: true
#       auth: true
#     mail:
#       smtp:
#         ssl:
#           enable: true


# redis config

#  redis:
#    port: 6379
#    host: { HOST }


server:
  port: ${server.port:8082}
  address: ${server.ip:0.0.0.0}
  ssl:
    enabled: false
    key-store: keystore.p12 # Absolute path
    key-store-password: password
    keyStoreType: PKCS12
    keyAlias: tomcat

datart:
  migration:
    enable: true # 是否开启数据库自动升级
  server:
    address: ${datart.address:http://127.0.0.1:8082}

  # 租户管理模式：platform-平台(默认)，team-团队
  tenant-management-mode: team

  user:
    register: true # 是否允许注册
    active:
      send-mail: ${datart.send-mail:false}  # 注册用户时是否需要邮件验证激活
      expire-hours: ${datart.register.expire-hours:48} # 注册邮件有效期/小时
    invite:
      expire-hours: ${datart.invite.expire-hours:48} # 邀请邮件有效期/小时

  security:
    token:
      secret: "d@a$t%a^r&a*t" #加密密钥
      timeout-min: 30  # 登录会话有效时长，单位：分钟。

  env:
    file-path: ${user.dir}/files # 服务端文件保存位置

  screenshot:
    timeout-seconds: 60
    webdriver-type: CHROME
    webdriver-path: ${datart.webdriver-path:}
